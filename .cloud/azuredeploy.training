{
        "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workspaceName": {
            "defaultValue": "mnarkdev1",
            "type": "String",
            "metadata": {
                "description": "Specifies the name of the Azure Machine Learning workspace."
            }
        },
        "keyVaultName": {
            "defaultValue": "[concat('kva', uniqueString(resourceGroup().id))]",
            "type": "String",
            "metadata": {
                "description": "Specifies the name of the Azure keyvault to create."
            }
        },
        "storageAccountName": {
            "defaultValue": "[concat('storagea', uniqueString(resourceGroup().id))]",
            "type": "String",
            "metadata": {
                "description": "Specifies the name of the Azure storage account to create."
            }
        },
        "applicationInsightsName": {
            "defaultValue": "[concat('aia', uniqueString(resourceGroup().id))]",
            "type": "String",
            "metadata": {
                "description": "Specifies the name of the Azure app insights account to create."
            }
        },
        "location": {
            "defaultValue": "[resourceGroup().location]",
            "type": "String",
            "metadata": {
                "description": "Specifies the SKU size for interactive and remote compute."
            }
        },
        "vmSize": {
            "defaultValue": "Standard_NC6",
            "type": "String",
            "metadata": {
                "description": "Specifies the SKU size for interactive and remote compute."
            }
        },
        "minNodeCount": {
            "defaultValue": 0,
            "type": "int",
            "metadata": {
                "description": "The minimum number of nodes to use on the cluster. If not specified, defaults to 0"
            }
        },
        "maxNodeCount": {
            "defaultValue": 4,
            "type": "int",
            "metadata": {
                "description": " The maximum number of nodes to use on the cluster. If not specified, defaults to 4."
            }
        },
        "codejobName": {
            "defaultValue": "autotest2",
            "type": "string",
            "metadata": {
                "description": "The name of the code job."
            }
        },
        "codeConfigCommand": {
            "defaultValue": [
                "tensorflow.py"
            ],
            "type": "Array",
            "metadata": {
                "description": "Start up command in code job."
            }
        },
        "command": {
            "type": "string",
            "metadata": {
                "description": "Start up command in code job."
            },
            "defaultValue": "https://raw.githubusercontent.com/mrudulan/DevPlatv2Template/master/code/lightgbm/iris/train.py"
        },
        "workerCount": {
            "defaultValue": 2,
            "type": "int",
            "metadata": {
                "description": "The number of workers for distributed training."
            }
        },
        "parameterServerCount": {
            "defaultValue": 1,
            "type": "int",
            "metadata": {
                "description": "The parameter server count for distributed training."
            }
        },
        "saveFileToPath": {
            "type": "string",
            "defaultValue": "azureml/LocalUpload/Test"
        },
        "computeName": {
            "type": "string",
            "metadata": {
                "description": "The compute you want this job to run on"
            },
            "defaultValue": "cpucluster"
        },
        "tags": {
            "type": "object",
            "defaultValue": {},
            "metadata": {
                "description": "Optional : Provide JSON object with 'key,value' pairs to add as tags on dataset. Example- {\"sampleTag1\": \"tagValue1\", \"sampleTag2\": \"tagValue2\"}"
            }
        },
        "userAssignedIdentities": {
            "type": "string",
            "defaultValue": "/subscriptions/5f08d643-1910-4a38-a7c7-84a39d4f42e0/resourceGroups/mnarkdev/providers/Microsoft.ManagedIdentity/userAssignedIdentities/mnarkuai1"
        },
        "utcValue": {
            "type": "string",
            "defaultValue": "[utcNow()]"
        }
    },
    "variables": {
        "storageAccount": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
        "keyVault": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
        "applicationInsights": "[resourceId('Microsoft.Insights/components', parameters('applicationInsightsName'))]",
        "environmentId": "[resourceId('Microsoft.MachineLearningServices/workspaces/Environment', parameters('envName'))]",
        "dataId": "[resourceId('Microsoft.MachineLearningServices/workspaces/Data', parameters('dataName'))]",
        "CodeArtifactId": "[resourceId('Microsoft.MachineLearningServices/workspaces/Code', parameters('codeConfigCommand'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-04-01",
            "name": "[parameters('storageAccountName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "StorageV2",
            "properties": {
                "encryption": {
                    "services": {
                        "blob": {
                            "enabled": true
                        },
                        "file": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "supportsHttpsTrafficOnly": true
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2019-09-01",
            "name": "[parameters('keyVaultName')]",
            "location": "[parameters('location')]",
            "properties": {
                "tenantId": "[subscription().tenantId]",
                "sku": {
                    "name": "standard",
                    "family": "A"
                },
                "accessPolicies": []
            }
        },
        {
            "type": "Microsoft.Insights/components",
            "apiVersion": "2018-05-01-preview",
            "name": "[parameters('applicationInsightsName')]",
            "location": "[if(or(equals(parameters('location'),'eastus2'), equals(parameters('location'),'centraluseuap')),'southcentralus',parameters('location'))]",
            "kind": "web",
            "properties": {
                "Application_Type": "web"
            }
        },
        {
            "type": "Microsoft.MachineLearningServices/workspaces",
            "apiVersion": "2020-03-01",
            "name": "[parameters('workspaceName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[parameters('applicationInsightsName')]",
                "[parameters('keyVaultName')]",
                "[parameters('storageAccountName')]"
            ],
            "sku": {
                "tier": "enterprise",
                "name": "enterprise"
            },
            "identity": {
                "type": "systemAssigned"
            },
            "properties": {
                "friendlyName": "[parameters('workspaceName')]",
                "storageAccount": "[variables('storageAccount')]",
                "keyVault": "[variables('keyVault')]",
                "applicationInsights": "[variables('applicationInsights')]"
            }
        },
        {
            "type": "Microsoft.MachineLearningServices/workspaces/computes",
            "apiVersion": "2020-06-01",
            "name": "[concat(parameters('workspaceName'), '/', parameters('computeName'))]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[parameters('workspaceName')]"
            ],
            "properties": {
                "computeType": "AmlCompute",
                "properties": {
                    "vmSize": "[parameters('vmSize')]",
                    "scaleSettings": {
                        "minNodeCount": "[parameters('minNodeCount')]",
                        "maxNodeCount": "[parameters('maxNodeCount')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deploymentScripts",
            "apiVersion": "2019-10-01-preview",
            "name": "UploadToBlob",
            "location": "eastus",
            "kind": "AzureCLI",
            "identity": {
                "type": "userAssigned",
                "userAssignedIdentities": {
                    "[parameters('userAssignedIdentities')]": {}
                }
            },
            "properties": {
                "containerSettings": {
                    "containerGroupName": null
                },
                "forceUpdateTag": "[parameters('utcValue')]",
                "azCliVersion": "2.0.80",
                "arguments": "[concat(parameters('command'), ' ', parameters('saveFileToPath'), ' ', parameters('storageAccountName'))]",
                "scriptContent": "wget $1; downloadfilename=$(basename $1); az storage blob upload -f $downloadfilename -c $2 --account-name $3 -n $downloadfilename",
                "timeout": "PT30M",
                "cleanupPreference": "OnSuccess",
                "retentionInterval": "P1D"
            }
        },
        {
            "type": "Microsoft.MachineLearningServices/workspaces/codejobs",
            "name": "[concat(parameters('workspaceName'), '/', parameters('codejobName'))]",
            "apiVersion": "2020-09-01-preview",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[parameters('workspaceName')]",
                "[parameters('computeName')]"
            ],
            "properties": {
                "computeBinding": {
                    "computeId": "[parameters('computeName')]",
                    "nodeCount": "1"
                },
                "codeConfiguration": {
                    "Command": "[parameters('codeConfigCommand')]",
                    "CodeArtifactId" : "[variables('CodeArtifactId')]"
                },
                "EnvironmentId" : "[variables('environmentId')]"
                "DataBinding": {
                        "irisBinding" : {
                            "sourceDataReference" : "[variables('dataId')]",
                            "localReference" : "data/",
                            "Mode" : "Mount"
                        }
                },
                "Tags": "[parameters('tags')]",
                "DistributionConfiguration": {
                    "DistributionType": "Tensorflow",
                        "WorkerCount": "[parameters('workerCount')]",
                        "ParameterServerCount": "[parameters('parameterServerCount')]"
                }
            }
        }
    ],
    "outputs": {
        "result": {
            "value": "[reference('UploadToBlob')]",
            "type": "object"
        }
    }
}
